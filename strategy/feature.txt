wave = (high - low)
dwave = (wave / delay(wave, 1))
willr14 = ((ts_max(high, 13) - close) / (ts_max(high, 13) - ts_min(low, 13)))
ad = sum(((((close * 2) - (high + low)) / (high - low)) * volume), 250)
rsi14 = ((1 + (mean(((delta(close, 1) > 0) ? delta(close, 1) : 0), 13) / mean(((delta(close, 1) < 0) ? (delta(close, 1) * -1) : 0), 13))) * 100)
rsi28 = ((1 + (mean(((delta(close, 1) > 0) ? delta(close, 1) : 0), 27) / mean(((delta(close, 1) < 0) ? (delta(close, 1) * -1) : 0), 27))) * 100)
cci14 = ((((((high + low) + close) / 3) - mean(close, 13)) / mean((mean(close, 13) - close), 13)) / 0.015)
obv = sum((((close < delay(close, 1)) ? -1 : 1) * volume), 250)
mavg12 = decay_linear(close, 11)
mavg26 = decay_linear(close, 25)
apo12_26 = (mavg12 - mavg26)
ppo12_26 = (apo12_26 / mavg26)
su14 = sum(((close > delay(close, 1)) ? (close - delay(close, 1)) : 0), 13)
sd14 = sum(((close < delay(close, 1)) ? (delay(close, 1) - close) : 0), 13)
cmo14 = ((su14 - sd14) / (su14 + sd14))
roc10 = (delta(close, 9) / delay(close, 9))
r_turn0 = rank(turn)
r_turn9 = rank(sum(turn, 8))
high_low = (high / low)
turn9 = delay(turn, 9)
turn1 = delay(turn, 1)
return5 = (close / delay(close, 4))
return10 = (close / delay(close, 9))
return20 = (close / delay(close, 19))
amount0_5 = (amount / mean(amount, 4))
amount5_20 = (mean(amount,4) / mean(amount,19))
r_amount0_5 = (rank(amount) / rank(mean(amount, 4)))
r_amount5_10 = (rank(mean(amount,4)) / rank(mean(amount,9)))
r_return = rank(returns)
r_return5 = rank((close / delay(close, 5)))
r_return10 = rank((close / delay(close, 10)))
r_return0_5 = (r_return / r_return5)
r_return5_10 = (r_return5 / r_return10)
alpha1 = (rank(ts_argmax(signed_power(((returns < 0) ? stddev(returns, 20) : close), 2.), 5)) - 0.5)
alpha2 = correlation(rank(delta(log(volume), 2)), rank(((close - open) / open)), 6)
alpha12 = (sign(delta(volume, 1)) * (-1 * delta(close, 1)))
alpha30 =  (((1.0 - rank(((sign((close - delay(close, 1))) + sign((delay(close, 1) - delay(close, 2)))) + sign((delay(close, 2) - delay(close,3)))))) * sum(volume, 5)) / sum(volume, 20))
alpha41 = (((high * low) ^ 0.5) - vwap)
alpha53 = (-1 * delta((((close - low) - (high - close)) / (close - low)), 9))
alpha55 = correlation(rank(((close - ts_min(low, 12)) / (ts_max(high, 12) - ts_min(low, 12)))), rank(volume), 6)
alpha101 = ((close - open) / ((high - low) + 0.001))
