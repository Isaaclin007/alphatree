Alpha#1: rank(ts_argmax(((returns < 0) ? stddev(returns, 20) : close), 5))Alpha#2: correlation(rank(delta(log(volume), 2)), rank(((close - open) / open)), 6)Alpha#3: correlation(rank(open), rank(volume), 10)Alpha#4: ts_rank(rank(low), 9)Alpha#5: (rank((open - mean(vwap, 10))) * rank((close - vwap)))Alpha#6: correlation(open, volume, 10)Alpha#7: ((mean(volume, 20) < volume) ? (ts_rank(abs(delta(close, 7)), 60) * Subalpha#8) : -1)Alpha#8: rank(delta((sum(open, 5) * sum(returns, 5)), 10))Alpha#9: ((0 < ts_min(delta(close, 1), 5)) ? delta(close, 1) : ((ts_max(delta(close, 1), 5) < 0) ? delta(close, 1) : Subalpha#2))Alpha#10: rank(((0 < ts_min(delta(close, 1), 4)) ? delta(close, 1) : ((ts_max(delta(close, 1), 4) < 0) ? delta(close, 1) : Subalpha#2)))Alpha#11: ((rank(ts_max((vwap - close), 3)) + rank(ts_min((vwap - close), 3))) * rank(delta(volume, 3)))Alpha#12: (delta(close, 1) * sign(delta(volume, 1)))Alpha#13: rank(correlation(rank(close), rank(volume), 5))Alpha#14: (rank(delta(returns, 3)) * correlation(open, volume, 10))Alpha#15: sum(rank(correlation(rank(high), rank(volume), 3)), 3)Alpha#16: rank(correlation(rank(high), rank(volume), 5))Alpha#17: ((Subalpha#7 * rank(delta(delta(close, 1), 1))) * rank(ts_rank((volume / mean(volume, 20)), 5)))Alpha#18: rank(((stddev(abs((close - open)), 5) + (close - open)) + correlation(close, open, 10)))Alpha#19: (Subalpha#8 * Subalpha#4)Alpha#20: ((rank((open - delay(high, 1))) * rank((open - delay(close, 1)))) * rank((open - delay(low, 1))))Alpha#21: ((up(close, 8) < mean(close, 2)) ? -1 : ((mean(close, 2) < down(close, 8)) ? 1 : ((mean(volume, 20) < volume) ? 1 : -1)))Alpha#22: (delta(correlation(high, volume, 5), 5) * rank(stddev(close, 20)))Alpha#23: ((mean(high, 20) < high) ? (-1 * delta(high, 2)) : 0)Alpha#24: (((delta(mean(close, 100), 100) / delay(close, 100)) < 0.05) ? (ts_min(close, 100) - close) : Subalpha#3)Alpha#25: (1 - rank((((returns * mean(volume, 20)) * vwap) * (high - close))))Alpha#26: ts_max(correlation(ts_rank(volume, 5), ts_rank(high, 5), 5), 3)Alpha#27: ((rank(mean(correlation(rank(volume), rank(vwap), 6), 2)) < 0.5) ? 1 : -1)Alpha#28: scale((mid(high, low) - close))Alpha#29: (ts_min(product(rank(scale(log(sum(ts_min(rank((-1 * rank(delta(close, 5)))), 2), 1)))), 1), 5) + Subalpha#9)Alpha#30: ((1 - rank(((sign(delta(close, 1)) + sign(delay(delta(close, 1), 1))) + sign(delay(delta(close, 1), 2))))) * (sum(volume, 5) / sum(volume, 20)))Alpha#31: ((rank(decay_linear((-1 * rank(delta(close, 10))), 10)) + rank(Subalpha#3)) + sign(scale(correlation(mean(volume, 20), low, 12))))Alpha#32: lerp(scale((mean(close, 7) - close)), scale(correlation(vwap, delay(close, 5), 230)), 0.05)Alpha#33: rank((1 - (open / close)))Alpha#34: rank(((1 - rank((stddev(returns, 2) / stddev(returns, 5)))) + (1 - rank(delta(close, 1)))))Alpha#35: ((ts_rank(volume, 32) * (1 - ts_rank(((close + high) - low), 16))) * (1 - ts_rank(returns, 32)))Alpha#36: lerp(lerp(lerp(lerp(rank(correlation((close - open), delay(volume, 1), 15)), Subalpha#10, 0.75), rank(Subalpha#9), 0.75), rank(abs(correlation(vwap, mean(volume, 20), 6))), 0.75), rank(((mean(close, 200) - open) * (close - open))), 0.75)Alpha#37: (rank(correlation(delay((open - close), 1), close, 200)) + Subalpha#10)Alpha#38: (Subalpha#7 * rank((close / open)))Alpha#39: (rank((delta(close, 7) * (1 - rank(decay_linear((volume / mean(volume, 20)), 9))))) * Subalpha#4)Alpha#40: (rank(stddev(high, 10)) * correlation(high, volume, 10))Alpha#41: (power_mid(high, low) - vwap)Alpha#42: (rank((vwap - close)) / rank((vwap + close)))Alpha#43: (ts_rank((volume / mean(volume, 20)), 20) * ts_rank((-1 * delta(close, 7)), 8))Alpha#44: correlation(high, rank(volume), 5)Alpha#45: ((rank(mean(delay(close, 5), 20)) * correlation(close, volume, 2)) * rank(correlation(sum(close, 5), sum(close, 20), 2)))Alpha#46: ((Subalpha#1 < 0) ? Subalpha#5 : -1)Alpha#47: ((((1 - rank(close)) * mean_ratio(volume, 20)) * (mean_ratio(high, 5) * rank((high - close)))) - rank(delta(vwap, 5)))Alpha#48: (indneutralize((correlation(delta(close, 1), delta(delay(close, 1), 1), 250) * (delta(close, 1) / close)), IndClass.market) / sum(((delta(close, 1) / delay(close, 1)) ^ 2), 250))Alpha#49: Subalpha#5Alpha#50: ts_max(rank(correlation(rank(volume), rank(vwap), 5)), 5)Alpha#51: ((Subalpha#1 < -0.05) ? 1 : Subalpha#2)Alpha#52: (((delay(ts_min(low, 5), 5) - ts_min(low, 5)) * rank((sum(returns, 240) - sum(returns, 20)))) * ts_rank(volume, 5))Alpha#53: delta((((close - low) - (high - close)) / (close - low)), 9)Alpha#54: (((open / close) ^ 5) * ((low - close) / (low - high)))Alpha#55: correlation(rank(((close - ts_min(low, 12)) / (ts_max(high, 12) - ts_min(low, 12)))), rank(volume), 6)Alpha#56: (rank((sum(returns, 10) / sum(sum(returns, 2), 3))) * rank((returns * close)))Alpha#57: ((close - vwap) / decay_linear(rank(ts_argmax(close, 30)), 2))Alpha#58: ts_rank(decay_linear(correlation(indneutralize(vwap, IndClass.concept), volume, 3.92795), 7.89291), 5.50322)Alpha#59: ts_rank(decay_linear(correlation(indneutralize(vwap, IndClass.market), volume, 4.25197), 16.2289), 8.19648)Alpha#60: lerp(scale(Subalpha#11), (-1 * scale(rank(ts_argmax(close, 10)))), 0.66)Alpha#61: (rank((vwap - ts_min(vwap, 16.1219))) < rank(correlation(vwap, mean(volume, 180), 17.9282)))Alpha#62: (rank(correlation(vwap, sum(mean(volume, 20), 22.4101), 9.91009)) < rank(((rank(open) + rank(open)) < (rank(mid(high, low)) + rank(high)))))Alpha#63: (rank(decay_linear(delta(indneutralize(close, IndClass.market), 2.25164), 8.22237)) - rank(decay_linear(correlation(lerp(vwap, open, 0.318108), sum(mean(volume, 180), 37.2467), 13.557), 12.2883)))Alpha#64: (rank(correlation(sum(lerp(open, low, 0.178404), 12.7054), sum(mean(volume, 120), 12.7054), 16.6208)) < rank(delta(lerp(mid(high, low), vwap, 0.178404), 3.69741)))Alpha#65: (rank(correlation(lerp(open, vwap, 0.00817205), sum(mean(volume, 60), 8.6911), 6.40374)) < rank((open - ts_min(open, 13.635))))Alpha#66: (rank(decay_linear(delta(vwap, 3.51013), 7.23052)) + ts_rank(decay_linear(((low - vwap) / (open - mid(high, low))), 11.4157), 6.72611))Alpha#67: (rank((high - ts_min(high, 2.14593))) ^ rank(correlation(indneutralize(vwap, IndClass.concept), indneutralize(mean(volume, 20), IndClass.market), 6.02936)))Alpha#68: (ts_rank(correlation(rank(high), Subalpha#6, 8.91644), 13.9333) < rank(delta(lerp(close, low, 0.518371), 1.06157)))Alpha#69: (rank(ts_max(delta(indneutralize(vwap, IndClass.market), 2.72412), 4.79344)) ^ ts_rank(correlation(lerp(close, vwap, 0.490655), mean(volume, 20), 4.92416), 9.0615))Alpha#70: (rank(delta(vwap, 1.29456)) ^ ts_rank(correlation(indneutralize(close, IndClass.market), mean(volume, 50), 17.8256), 17.9171))Alpha#71: max(ts_rank(decay_linear(correlation(ts_rank(close, 3.43976), ts_rank(mean(volume, 180), 12.0647), 18.0175), 4.20501), 15.6948), ts_rank(decay_linear((rank(((low + open) - (vwap + vwap))) ^ 2), 16.4662), 4.4388))Alpha#72: (rank(decay_linear(correlation(mid(high, low), mean(volume, 40), 8.93345), 10.1519)) / rank(decay_linear(correlation(ts_rank(vwap, 3.72469), ts_rank(volume, 18.5188), 6.86671), 2.95011)))Alpha#73: max(rank(decay_linear(delta(vwap, 4.72775), 2.91864)), ts_rank(decay_linear((-1 * (delta(lerp(open, low, 0.147155), 2.03608) / lerp(open, low, 0.147155))), 3.33829), 16.7411))Alpha#74: (rank(correlation(close, sum(mean(volume, 30), 37.4843), 15.1365)) < rank(correlation(rank(lerp(high, vwap, 0.0261661)), rank(volume), 11.4791)))Alpha#75: (rank(correlation(vwap, volume, 4.24304)) < rank(correlation(rank(low), rank(mean(volume, 50)), 12.4413)))Alpha#76: max(rank(decay_linear(delta(vwap, 1.24383), 11.8259)), ts_rank(decay_linear(ts_rank(correlation(indneutralize(low, IndClass.concept), mean(volume, 81), 8.14941), 19.569), 17.1543), 19.383))Alpha#77: min(rank(decay_linear(((mid(high, low) + high) - (vwap + high)), 20.0451)), rank(decay_linear(correlation(mid(high, low), mean(volume, 40), 3.1614), 5.64125)))Alpha#78: (rank(correlation(sum(lerp(low, vwap, 0.352233), 19.7428), sum(mean(volume, 40), 19.7428), 6.83313)) ^ rank(correlation(rank(vwap), rank(volume), 5.77492)))Alpha#79: (rank(delta(indneutralize(lerp(close, open, 0.60733), IndClass.concept), 1.23438)) < rank(correlation(ts_rank(vwap, 3.60973), ts_rank(mean(volume, 150), 9.18637), 14.6644)))Alpha#80: (rank(sign(delta(indneutralize(lerp(open, high, 0.868128), IndClass.market), 4.04545))) ^ ts_rank(correlation(high, mean(volume, 10), 5.11456), 5.53756))Alpha#81: (rank(product(rank(correlation(vwap, sum(mean(volume, 10), 49.6054), 8.47743)), 14.9655)) < rank(correlation(rank(vwap), rank(volume), 5.07914)))Alpha#82: min(rank(decay_linear(delta(open, 1.46063), 14.8717)), ts_rank(decay_linear(correlation(indneutralize(volume, IndClass.concept), open, 17.4842), 6.92131), 13.4283))Alpha#83: ((rank(delay(((high - low) / mean(close, 5)), 2)) * rank(volume)) / (((high - low) / mean(close, 5)) / (vwap - close)))Alpha#84: (ts_rank((vwap - ts_max(vwap, 15.3217)), 20.7127) ^ rank(delta(close, 4.96796)))Alpha#85: (rank(correlation(lerp(high, close, 0.876703), mean(volume, 30), 9.61331)) ^ rank(correlation(ts_rank(mid(high, low), 3.70596), ts_rank(volume, 10.1595), 7.11408)))Alpha#86: (ts_rank(correlation(close, sum(mean(volume, 20), 14.7444), 6.00049), 20.4195) < rank(((open + close) - (vwap + open))))Alpha#87: max(rank(decay_linear(delta(lerp(close, vwap, 0.369701), 1.91233), 2.65461)), ts_rank(decay_linear(abs(correlation(indneutralize(mean(volume, 81), IndClass.market), close, 13.4132)), 4.89768), 14.4535))Alpha#88: min(rank(decay_linear(((rank(open) + rank(low)) - (rank(high) + rank(close))), 8.06882)), ts_rank(decay_linear(correlation(ts_rank(close, 8.44728), ts_rank(mean(volume, 60), 20.6966), 8.01266), 6.65053), 2.61957))Alpha#89: (ts_rank(decay_linear(correlation(low, mean(volume, 10), 6.94279), 5.51607), 3.79744) - ts_rank(decay_linear(delta(indneutralize(vwap, IndClass.market), 3.48158), 10.1466), 15.3012))Alpha#90: (rank((close - ts_max(close, 4.66719))) ^ ts_rank(correlation(indneutralize(mean(volume, 40), IndClass.market), low, 5.38375), 3.21856))Alpha#91: (ts_rank(decay_linear(decay_linear(correlation(indneutralize(close, IndClass.market), volume, 9.74928), 16.398), 3.83219), 4.8667) - rank(decay_linear(correlation(vwap, mean(volume, 30), 4.01303), 2.6809)))Alpha#92: min(ts_rank(decay_linear(((mid(high, low) + close) < (low + open)), 14.7221), 18.8683), ts_rank(decay_linear(correlation(rank(low), rank(mean(volume, 30)), 7.58555), 6.94024), 6.80584))Alpha#93: (ts_rank(decay_linear(correlation(indneutralize(vwap, IndClass.market), mean(volume, 81), 17.4193), 19.848), 7.54455) / rank(decay_linear(delta(lerp(close, vwap, 0.524434), 2.77377), 16.2664)))Alpha#94: (rank((vwap - ts_min(vwap, 11.5783))) ^ ts_rank(correlation(ts_rank(vwap, 19.6462), ts_rank(mean(volume, 60), 4.02992), 18.0926), 2.70756))Alpha#95: (rank((open - ts_min(open, 12.4105))) < ts_rank(rank(correlation(sum(mid(high, low), 19.1351), sum(mean(volume, 40), 19.1351), 12.8742)), 11.7584))Alpha#96: max(ts_rank(decay_linear(correlation(rank(vwap), rank(volume), 3.83878), 4.16783), 8.38151), ts_rank(decay_linear(ts_argmax(correlation(ts_rank(close, 7.45404), ts_rank(mean(volume, 60), 4.13242), 3.65459), 12.6556), 14.0365), 13.4143))Alpha#97: (rank(decay_linear(delta(indneutralize(lerp(low, vwap, 0.721001), IndClass.market), 3.3705), 20.4523)) - ts_rank(decay_linear(ts_rank(correlation(ts_rank(low, 7.87871), ts_rank(mean(volume, 60), 17.255), 4.97547), 18.5925), 15.7152), 6.71659))Alpha#98: (rank(decay_linear(correlation(vwap, sum(mean(volume, 5), 26.4719), 4.58418), 7.18088)) - rank(decay_linear(ts_rank(ts_argmin(correlation(rank(open), Subalpha#6, 20.8187), 8.62571), 6.95668), 8.07206)))Alpha#99: (rank(correlation(sum(mid(high, low), 19.8975), sum(mean(volume, 60), 19.8975), 8.8136)) < rank(correlation(low, volume, 6.28259)))Alpha#100: (lerp(scale(indneutralize(Subalpha#11, IndClass.concept)), (-1 * scale(indneutralize((correlation(close, rank(mean(volume, 20)), 5) - rank(ts_argmin(close, 30))), IndClass.market))), 0.66) * (volume / mean(volume, 20)))Alpha#101: ((close - open) / (high - low))